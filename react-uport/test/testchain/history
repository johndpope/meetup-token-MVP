
eth.blockNumber
// geth --datadir ./testchain attach << EOF
// Display the first account
console.log("RESULT: eth.accounts[0]: " + eth.accounts[0]);
// Display the balance of the first account
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
// Display some text
console.log("RESULT: hello");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeeupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeeupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
while (txpool.status.pending > 0) {
}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
while (txpool.status.pending > 0) {
}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
while (txpool.status.pending > 0) {
}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
while (txpool.status.pending > 0) {
}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
while (txpool.status.pending > 0) {
}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
# // Display some information
# console.log("RESULT: " + JSON.stringify(MeeupOutput));
# # Extract the contract ABI
# var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# # Extract the contract bytecode
# var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# # Display both values
# console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
# console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
# // -----------------------------------------------------------------------------
# var deployMeeupMessage = "Deploy Meeup";
# // -----------------------------------------------------------------------------
# console.log("RESULT: --- " + deployMeeupMessage + " ---");
# var MeeupContract = web3.eth.contract(MeeupAbi);
# console.log("RESULT: " + JSON.stringify(MeeupContract));
# var MeeupTx = null;
# var MeeupAddress = null;
# var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
#   function(e, contract) {
#     if (!e) {
#       if (!contract.address) {
#         MeeupTx = contract.transactionHash;
#       } else {
#         MeeupAddress = contract.address;
#         console.log("DATA: MeeupAddress=" + MeeupAddress);
#       }
#     }
#   }
# );
# // Wait until there are no pending transactions in the txpool
# while (txpool.status.pending > 0) {
# }
# // Display meetup count
# console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
# console.log("RESULT: meetups.length=" + Meetup.meetups(0))
# // Display the values of var1 and var2
# //console.log("RESULT: var1=" + Meeup.var1());
# //console.log("RESULT: var2=" + Meeup.var2());
# //console.log("RESULT: ");
# // -----------------------------------------------------------------------------
# var modifyVarssMessage = "Modifying Vars";
# // -----------------------------------------------------------------------------
# //console.log("RESULT: --- " + modifyVarssMessage + " ---");
# //var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
# //var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
# //while (txpool.status.pending > 0) {
# //}
# // Display the transaction status
# //console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
# //console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
# //console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
# //console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
# // Display the new values of var1 and var2
# //console.log("RESULT: var1=" + Meeup.var1());
# //console.log("RESULT: var2=" + Meeup.var2());
# //console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
//geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
# Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
# Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
# Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
// Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
// Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
// Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
// Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
// Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
// Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
// Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].abi);
// Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:Meeup"].bin;
// Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy Meeup";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeeupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
// Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
// Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.meetups(0))
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("Meeup.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeeupOutput));
// Extract the contract ABI
var MeeupAbi = JSON.parse(MeeupOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeeupBin = "0x" + MeeupOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
console.log("RESULT: MeeupAbi=" + JSON.stringify(MeeupAbi));
console.log("RESULT: MeeupBin=" + JSON.stringify(MeeupBin));
// -----------------------------------------------------------------------------
var deployMeeupMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupMessage + " ---");
var MeeupContract = web3.eth.contract(MeeupAbi);
console.log("RESULT: " + JSON.stringify(MeeupContract));
var MeeupTx = null;
var MeeupAddress = null;
var Meeup = MeeupContract.new({from: eth.accounts[0], data: MeeupBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeeupTx = contract.transactionHash;
      } else {
        MeeupAddress = contract.address;
        console.log("DATA: MeeupAddress=" + MeeupAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = Meeup.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = Meeup.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + Meeup.var1());
//console.log("RESULT: var2=" + Meeup.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var Meetup = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var Meetup = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var Meetup = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var Meetup = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// Display meetup count
console.log("RESULT: --- " + "sadfdasfdasfdasfdasf" + " ---");
console.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var Meetup = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
// Check meetup count
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + Meetup.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// -----------------------------------------------------------------------------
var prepareAccountsMessage = "Prepare accounts";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + prepareAccountsMessage + " ---");
// Prepare new accounts
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[2], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[3], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[4], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[5], value: web3.toWei(1234, "ether")})
// create users
meetupbase.createUser("A", {from: eth.accounts[0], gas:4000000, gasPrice:100})
meetupbase.createUser("B", {from: eth.accounts[1], gas:4000000, gasPrice:100})
meetupbase.createUser("C", {from: eth.accounts[2], gas:4000000, gasPrice:100})
meetupbase.createUser("D", {from: eth.accounts[3], gas:4000000, gasPrice:100})
meetupbase.createUser("E", {from: eth.accounts[4], gas:4000000, gasPrice:100})
console.log(web3.fromWei(eth.accounts[1], "ether"));
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
// -----------------------------------------------------------------------------
var prepareAccountsMessage = "Prepare accounts";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + prepareAccountsMessage + " ---");
// Prepare new accounts
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[2], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[3], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[4], value: web3.toWei(1234, "ether")})
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[5], value: web3.toWei(1234, "ether")})
// create users
meetupbase.createUser("A", {from: eth.accounts[0], gas:4000000, gasPrice:100})
meetupbase.createUser("B", {from: eth.accounts[1], gas:4000000, gasPrice:100})
meetupbase.createUser("C", {from: eth.accounts[2], gas:4000000, gasPrice:100})
meetupbase.createUser("D", {from: eth.accounts[3], gas:4000000, gasPrice:100})
meetupbase.createUser("E", {from: eth.accounts[4], gas:4000000, gasPrice:100})
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
eth.blockNumber
eth.accounts
eth.blockNumber
eth.accounts
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Load accounts with eth
loadScript("functions.js");
unlockAccounts("");
printBalances();
console.log("RESULT: ");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Load accounts with eth
loadScript("functions.js");
unlockAccounts("");
printBalances();
console.log("RESULT: ");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Load accounts with eth
loadScript("functions.js");
unlockAccounts("");
printBalances();
console.log("RESULT: ");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Load accounts with eth
loadScript("functions.js");
unlockAccounts("");
printBalances();
console.log("RESULT: ");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Load accounts with eth
loadScript("functions.js");
unlockAccounts("");
printBalances();
console.log("RESULT: ");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
printBalances();
# geth --datadir ./testchain attach << EOF
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Load accounts with eth
loadScript("functions.js");
unlockAccounts("");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
printBalances();
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(1234, "ether")})
printBalances();
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[2], value: web3.toWei(1234, "ether")})
printBalances();
// Load the generated ABI and bytecode
loadScript("MeetupBase.js");
// Load accounts with eth
loadScript("functions.js");
unlockAccounts("");
// Display some information
// console.log("RESULT: " + JSON.stringify(MeetupBaseOutput));
// Extract the contract ABI
var MeetupBaseAbi = JSON.parse(MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].abi);
// Extract the contract bytecode
var MeetupBaseBin = "0x" + MeetupBaseOutput.contracts["MeetupBase_Simple.sol:MeetupBase"].bin;
// Display both values
// console.log("RESULT: MeetupBaseAbi=" + JSON.stringify(MeetupBaseAbi));
// console.log("RESULT: MeetupBaseBin=" + JSON.stringify(MeetupBaseBin));
// -----------------------------------------------------------------------------
var deployMeetupBaseMessage = "Deploy MeetupBase";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + deployMeetupBaseMessage + " ---");
var MeetupBaseContract = web3.eth.contract(MeetupBaseAbi);
console.log("RESULT: " + JSON.stringify(MeetupBaseContract));
var MeetupBaseTx = null;
var MeetupBaseAddress = null;
var MeetupBase = MeetupBaseContract.new({from: eth.accounts[0], data: MeetupBaseBin, gas: 4000000},
  function(e, contract) {
    console.log(e);
    if (!e) {
      if (!contract.address) {
        MeetupBaseTx = contract.transactionHash;
      } else {
        MeetupBaseAddress = contract.address;
        console.log("DATA: MeetupBaseAddress=" + MeetupBaseAddress);
      }
    }
  }
);
// Wait until there are no pending transactions in the txpool
while (txpool.status.pending > 0) {
}
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[0]), "ether") + " ETH");
console.log("RESULT: balance: " + web3.fromWei(eth.getBalance(eth.accounts[1]), "ether") + " ETH");
// -----------------------------------------------------------------------------
var registerUserMessage = "Register users";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + registerUserMessage + " ---");
console.log("RESULT: users(0)=" + MeetupBase.users(0));
// -----------------------------------------------------------------------------
var checkMeetupMessage = "Check meetups";
// -----------------------------------------------------------------------------
console.log("RESULT: --- " + checkMeetupMessage + " ---");
console.log("RESULT: meetups.length=" + MeetupBase.getMeetupCount())
// Display the values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
// -----------------------------------------------------------------------------
var modifyVarssMessage = "Modifying Vars";
// -----------------------------------------------------------------------------
//console.log("RESULT: --- " + modifyVarssMessage + " ---");
//var modifyVars1Tx = MeetupBase.setVar1("Hello, World!4567890123456789012345", {from: eth.accounts[0], gas: 100000});
//var modifyVars2Tx = MeetupBase.setVar2(456, {from: eth.accounts[0], gas: 100000});
//while (txpool.status.pending > 0) {
//}
// Display the transaction status
//console.log("RESULT: modifyVars1Tx=" + JSON.stringify(eth.getTransaction(modifyVars1Tx)));
//console.log("RESULT: modifyVars1TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars1Tx)));
//console.log("RESULT: modifyVars2Tx=" + JSON.stringify(eth.getTransaction(modifyVars2Tx)));
//console.log("RESULT: modifyVars2TxReceipt=" + JSON.stringify(eth.getTransactionReceipt(modifyVars2Tx)));
// Display the new values of var1 and var2
//console.log("RESULT: var1=" + MeetupBase.var1());
//console.log("RESULT: var2=" + MeetupBase.var2());
//console.log("RESULT: ");
printBalances();
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[1], value: web3.toWei(1234, "ether")})
printBalances();
eth.sendTransaction({from: eth.accounts[0], to: eth.accounts[2], value: web3.toWei(1234, "ether")})
printBalances();